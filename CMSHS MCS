# step 1
p = 7
q = 13

# step 2
n = p*q
print("n=",n)

# step 3 
phi = (p-1)*(q-1)

# step 4 
e = 4
while(e<phi):
if (math.gdc(e, phi) == 1)
  break
else : 
  e += 1

print("e =", e)
# step 5
k = 4
d = ((k*phi)+1)/e
print("d=", d)

# plain text
msg = 13
print(f'Original message:{msg}')

# encryption 
C = pow(msg,e)
C = math.fmod(C, n)
print (f'Encrypted message: {C}')

# decryption
M = pow(C,d)
M = math.fmod(M,n)

print (f'Decrypted message: {M}')
